[{"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/components/ui/button.tsx":"1","/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/components/ui/code-block.tsx":"2","/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/lib/utils.ts":"3","/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/pages/_app.tsx":"4","/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/pages/_document.tsx":"5","/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/pages/index.tsx":"6"},{"size":471,"mtime":1739912689328,"results":"7","hashOfConfig":"8"},{"size":2543,"mtime":1739912689328,"results":"9","hashOfConfig":"8"},{"size":166,"mtime":1739912689329,"results":"10","hashOfConfig":"8"},{"size":184,"mtime":1739912689329,"results":"11","hashOfConfig":"8"},{"size":334,"mtime":1739912689329,"results":"12","hashOfConfig":"8"},{"size":7546,"mtime":1739912689329,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wxv4ne",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/components/ui/button.tsx",[],[],"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/components/ui/code-block.tsx",[],[],"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/lib/utils.ts",[],[],"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/pages/_app.tsx",[],[],"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/pages/_document.tsx",[],[],"/home/runner/work/use-mutable-state-hook/use-mutable-state-hook/src/pages/index.tsx",[],["32"],{"ruleId":"33","severity":2,"message":"34","line":9,"column":22,"nodeType":"35","messageId":"36","endLine":9,"endColumn":25,"suggestions":"37","suppressions":"38"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["39","40"],["41"],{"messageId":"42","fix":"43","desc":"44"},{"messageId":"45","fix":"46","desc":"47"},{"kind":"48","justification":"49"},"suggestUnknown",{"range":"50","text":"51"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"52","text":"53"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","directive","",[317,320],"unknown",[317,320],"never"]